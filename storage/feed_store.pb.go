// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: storage/feed_store.proto

package storage

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Map struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TickerMap []*TickerMap `protobuf:"bytes,1,rep,name=TickerMap,proto3" json:"TickerMap,omitempty"`
}

func (x *Map) Reset() {
	*x = Map{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_feed_store_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Map) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Map) ProtoMessage() {}

func (x *Map) ProtoReflect() protoreflect.Message {
	mi := &file_storage_feed_store_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Map.ProtoReflect.Descriptor instead.
func (*Map) Descriptor() ([]byte, []int) {
	return file_storage_feed_store_proto_rawDescGZIP(), []int{0}
}

func (x *Map) GetTickerMap() []*TickerMap {
	if x != nil {
		return x.TickerMap
	}
	return nil
}

type TickerMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token          uint32  `protobuf:"varint,1,opt,name=Token,proto3" json:"Token,omitempty"`
	TradingSymbol  string  `protobuf:"bytes,2,opt,name=TradingSymbol,proto3" json:"TradingSymbol,omitempty"`
	Exchange       string  `protobuf:"bytes,3,opt,name=Exchange,proto3" json:"Exchange,omitempty"`
	Name           string  `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`
	Expiry         string  `protobuf:"bytes,5,opt,name=Expiry,proto3" json:"Expiry,omitempty"`
	Strike         float32 `protobuf:"fixed32,6,opt,name=Strike,proto3" json:"Strike,omitempty"`
	TickSize       float32 `protobuf:"fixed32,7,opt,name=TickSize,proto3" json:"TickSize,omitempty"`
	LotSize        uint32  `protobuf:"varint,8,opt,name=LotSize,proto3" json:"LotSize,omitempty"`
	InstrumentType string  `protobuf:"bytes,9,opt,name=InstrumentType,proto3" json:"InstrumentType,omitempty"`
	Segment        string  `protobuf:"bytes,10,opt,name=Segment,proto3" json:"Segment,omitempty"`
}

func (x *TickerMap) Reset() {
	*x = TickerMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_feed_store_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TickerMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TickerMap) ProtoMessage() {}

func (x *TickerMap) ProtoReflect() protoreflect.Message {
	mi := &file_storage_feed_store_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TickerMap.ProtoReflect.Descriptor instead.
func (*TickerMap) Descriptor() ([]byte, []int) {
	return file_storage_feed_store_proto_rawDescGZIP(), []int{1}
}

func (x *TickerMap) GetToken() uint32 {
	if x != nil {
		return x.Token
	}
	return 0
}

func (x *TickerMap) GetTradingSymbol() string {
	if x != nil {
		return x.TradingSymbol
	}
	return ""
}

func (x *TickerMap) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *TickerMap) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TickerMap) GetExpiry() string {
	if x != nil {
		return x.Expiry
	}
	return ""
}

func (x *TickerMap) GetStrike() float32 {
	if x != nil {
		return x.Strike
	}
	return 0
}

func (x *TickerMap) GetTickSize() float32 {
	if x != nil {
		return x.TickSize
	}
	return 0
}

func (x *TickerMap) GetLotSize() uint32 {
	if x != nil {
		return x.LotSize
	}
	return 0
}

func (x *TickerMap) GetInstrumentType() string {
	if x != nil {
		return x.InstrumentType
	}
	return ""
}

func (x *TickerMap) GetSegment() string {
	if x != nil {
		return x.Segment
	}
	return ""
}

type Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tickers []*Ticker `protobuf:"bytes,1,rep,name=Tickers,proto3" json:"Tickers,omitempty"`
}

func (x *Data) Reset() {
	*x = Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_feed_store_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Data) ProtoMessage() {}

func (x *Data) ProtoReflect() protoreflect.Message {
	mi := &file_storage_feed_store_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Data.ProtoReflect.Descriptor instead.
func (*Data) Descriptor() ([]byte, []int) {
	return file_storage_feed_store_proto_rawDescGZIP(), []int{2}
}

func (x *Data) GetTickers() []*Ticker {
	if x != nil {
		return x.Tickers
	}
	return nil
}

type Ticker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token               uint32 `protobuf:"varint,1,opt,name=Token,proto3" json:"Token,omitempty"`
	LastPrice           uint32 `protobuf:"varint,2,opt,name=LastPrice,proto3" json:"LastPrice,omitempty"`
	LastTradedQuantity  uint32 `protobuf:"varint,3,opt,name=LastTradedQuantity,proto3" json:"LastTradedQuantity,omitempty"`
	AverageTradedPrice  uint32 `protobuf:"varint,4,opt,name=AverageTradedPrice,proto3" json:"AverageTradedPrice,omitempty"`
	VolumeTraded        uint32 `protobuf:"varint,5,opt,name=VolumeTraded,proto3" json:"VolumeTraded,omitempty"`
	TotalBuy            uint32 `protobuf:"varint,6,opt,name=TotalBuy,proto3" json:"TotalBuy,omitempty"`
	TotalSell           uint32 `protobuf:"varint,7,opt,name=TotalSell,proto3" json:"TotalSell,omitempty"`
	High                uint32 `protobuf:"varint,8,opt,name=High,proto3" json:"High,omitempty"`
	Low                 uint32 `protobuf:"varint,9,opt,name=Low,proto3" json:"Low,omitempty"`
	Open                uint32 `protobuf:"varint,10,opt,name=Open,proto3" json:"Open,omitempty"`
	Close               uint32 `protobuf:"varint,11,opt,name=Close,proto3" json:"Close,omitempty"`
	OI                  uint32 `protobuf:"varint,12,opt,name=OI,proto3" json:"OI,omitempty"`
	OIHigh              uint32 `protobuf:"varint,13,opt,name=OIHigh,proto3" json:"OIHigh,omitempty"`
	OILow               uint32 `protobuf:"varint,14,opt,name=OILow,proto3" json:"OILow,omitempty"`
	PriceChange         uint32 `protobuf:"varint,15,opt,name=PriceChange,proto3" json:"PriceChange,omitempty"`
	LastTradedTimestamp uint32 `protobuf:"varint,16,opt,name=LastTradedTimestamp,proto3" json:"LastTradedTimestamp,omitempty"`
	ExchangeTimestamp   uint32 `protobuf:"varint,17,opt,name=ExchangeTimestamp,proto3" json:"ExchangeTimestamp,omitempty"`
	Depth               *Depth `protobuf:"bytes,18,opt,name=Depth,proto3" json:"Depth,omitempty"`
}

func (x *Ticker) Reset() {
	*x = Ticker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_feed_store_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ticker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ticker) ProtoMessage() {}

func (x *Ticker) ProtoReflect() protoreflect.Message {
	mi := &file_storage_feed_store_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ticker.ProtoReflect.Descriptor instead.
func (*Ticker) Descriptor() ([]byte, []int) {
	return file_storage_feed_store_proto_rawDescGZIP(), []int{3}
}

func (x *Ticker) GetToken() uint32 {
	if x != nil {
		return x.Token
	}
	return 0
}

func (x *Ticker) GetLastPrice() uint32 {
	if x != nil {
		return x.LastPrice
	}
	return 0
}

func (x *Ticker) GetLastTradedQuantity() uint32 {
	if x != nil {
		return x.LastTradedQuantity
	}
	return 0
}

func (x *Ticker) GetAverageTradedPrice() uint32 {
	if x != nil {
		return x.AverageTradedPrice
	}
	return 0
}

func (x *Ticker) GetVolumeTraded() uint32 {
	if x != nil {
		return x.VolumeTraded
	}
	return 0
}

func (x *Ticker) GetTotalBuy() uint32 {
	if x != nil {
		return x.TotalBuy
	}
	return 0
}

func (x *Ticker) GetTotalSell() uint32 {
	if x != nil {
		return x.TotalSell
	}
	return 0
}

func (x *Ticker) GetHigh() uint32 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *Ticker) GetLow() uint32 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *Ticker) GetOpen() uint32 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *Ticker) GetClose() uint32 {
	if x != nil {
		return x.Close
	}
	return 0
}

func (x *Ticker) GetOI() uint32 {
	if x != nil {
		return x.OI
	}
	return 0
}

func (x *Ticker) GetOIHigh() uint32 {
	if x != nil {
		return x.OIHigh
	}
	return 0
}

func (x *Ticker) GetOILow() uint32 {
	if x != nil {
		return x.OILow
	}
	return 0
}

func (x *Ticker) GetPriceChange() uint32 {
	if x != nil {
		return x.PriceChange
	}
	return 0
}

func (x *Ticker) GetLastTradedTimestamp() uint32 {
	if x != nil {
		return x.LastTradedTimestamp
	}
	return 0
}

func (x *Ticker) GetExchangeTimestamp() uint32 {
	if x != nil {
		return x.ExchangeTimestamp
	}
	return 0
}

func (x *Ticker) GetDepth() *Depth {
	if x != nil {
		return x.Depth
	}
	return nil
}

type Depth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Buy  []*Order `protobuf:"bytes,1,rep,name=Buy,proto3" json:"Buy,omitempty"`
	Sell []*Order `protobuf:"bytes,2,rep,name=Sell,proto3" json:"Sell,omitempty"`
}

func (x *Depth) Reset() {
	*x = Depth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_feed_store_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Depth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Depth) ProtoMessage() {}

func (x *Depth) ProtoReflect() protoreflect.Message {
	mi := &file_storage_feed_store_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Depth.ProtoReflect.Descriptor instead.
func (*Depth) Descriptor() ([]byte, []int) {
	return file_storage_feed_store_proto_rawDescGZIP(), []int{4}
}

func (x *Depth) GetBuy() []*Order {
	if x != nil {
		return x.Buy
	}
	return nil
}

func (x *Depth) GetSell() []*Order {
	if x != nil {
		return x.Sell
	}
	return nil
}

type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price    uint32 `protobuf:"varint,1,opt,name=Price,proto3" json:"Price,omitempty"`
	Quantity uint32 `protobuf:"varint,2,opt,name=Quantity,proto3" json:"Quantity,omitempty"`
	Orders   uint32 `protobuf:"varint,3,opt,name=Orders,proto3" json:"Orders,omitempty"`
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_storage_feed_store_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_storage_feed_store_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_storage_feed_store_proto_rawDescGZIP(), []int{5}
}

func (x *Order) GetPrice() uint32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Order) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Order) GetOrders() uint32 {
	if x != nil {
		return x.Orders
	}
	return 0
}

var File_storage_feed_store_proto protoreflect.FileDescriptor

var file_storage_feed_store_proto_rawDesc = []byte{
	0x0a, 0x18, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x22, 0x37, 0x0a, 0x03, 0x4d, 0x61, 0x70, 0x12, 0x30, 0x0a, 0x09, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x4d, 0x61,
	0x70, 0x52, 0x09, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x22, 0x9f, 0x02, 0x0a,
	0x09, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x24, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06,
	0x53, 0x74, 0x72, 0x69, 0x6b, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x69, 0x63, 0x6b, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x54, 0x69, 0x63, 0x6b, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4c, 0x6f, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x4c, 0x6f, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x31,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x07, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x07, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72,
	0x73, 0x22, 0xb0, 0x04, 0x0a, 0x06, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x2e, 0x0a, 0x12, 0x4c, 0x61, 0x73, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x64, 0x51, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x4c, 0x61,
	0x73, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x64, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x2e, 0x0a, 0x12, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x41, 0x76,
	0x65, 0x72, 0x61, 0x67, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x75, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x75, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x65, 0x6c, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x65, 0x6c, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x48, 0x69, 0x67, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x48, 0x69,
	0x67, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x4c, 0x6f, 0x77, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x4c, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x4f, 0x70, 0x65, 0x6e, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x4f, 0x49, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x4f, 0x49, 0x12, 0x16,
	0x0a, 0x06, 0x4f, 0x49, 0x48, 0x69, 0x67, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x4f, 0x49, 0x48, 0x69, 0x67, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x4f, 0x49, 0x4c, 0x6f, 0x77, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x4f, 0x49, 0x4c, 0x6f, 0x77, 0x12, 0x20, 0x0a, 0x0b,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x50, 0x72, 0x69, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x30,
	0x0a, 0x13, 0x4c, 0x61, 0x73, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x4c, 0x61, 0x73,
	0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x2c, 0x0a, 0x11, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x45, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x24,
	0x0a, 0x05, 0x44, 0x65, 0x70, 0x74, 0x68, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x70, 0x74, 0x68, 0x52, 0x05, 0x44,
	0x65, 0x70, 0x74, 0x68, 0x22, 0x4d, 0x0a, 0x05, 0x44, 0x65, 0x70, 0x74, 0x68, 0x12, 0x20, 0x0a,
	0x03, 0x42, 0x75, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x03, 0x42, 0x75, 0x79, 0x12,
	0x22, 0x0a, 0x04, 0x53, 0x65, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x04, 0x53,
	0x65, 0x6c, 0x6c, 0x22, 0x51, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x42, 0x13, 0x5a, 0x11, 0x2e, 0x2f, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x3b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_storage_feed_store_proto_rawDescOnce sync.Once
	file_storage_feed_store_proto_rawDescData = file_storage_feed_store_proto_rawDesc
)

func file_storage_feed_store_proto_rawDescGZIP() []byte {
	file_storage_feed_store_proto_rawDescOnce.Do(func() {
		file_storage_feed_store_proto_rawDescData = protoimpl.X.CompressGZIP(file_storage_feed_store_proto_rawDescData)
	})
	return file_storage_feed_store_proto_rawDescData
}

var file_storage_feed_store_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_storage_feed_store_proto_goTypes = []interface{}{
	(*Map)(nil),       // 0: storage.Map
	(*TickerMap)(nil), // 1: storage.TickerMap
	(*Data)(nil),      // 2: storage.Data
	(*Ticker)(nil),    // 3: storage.Ticker
	(*Depth)(nil),     // 4: storage.Depth
	(*Order)(nil),     // 5: storage.Order
}
var file_storage_feed_store_proto_depIdxs = []int32{
	1, // 0: storage.Map.TickerMap:type_name -> storage.TickerMap
	3, // 1: storage.Data.Tickers:type_name -> storage.Ticker
	4, // 2: storage.Ticker.Depth:type_name -> storage.Depth
	5, // 3: storage.Depth.Buy:type_name -> storage.Order
	5, // 4: storage.Depth.Sell:type_name -> storage.Order
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_storage_feed_store_proto_init() }
func file_storage_feed_store_proto_init() {
	if File_storage_feed_store_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_storage_feed_store_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Map); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_feed_store_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TickerMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_feed_store_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_feed_store_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ticker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_feed_store_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Depth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_storage_feed_store_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_storage_feed_store_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_storage_feed_store_proto_goTypes,
		DependencyIndexes: file_storage_feed_store_proto_depIdxs,
		MessageInfos:      file_storage_feed_store_proto_msgTypes,
	}.Build()
	File_storage_feed_store_proto = out.File
	file_storage_feed_store_proto_rawDesc = nil
	file_storage_feed_store_proto_goTypes = nil
	file_storage_feed_store_proto_depIdxs = nil
}
