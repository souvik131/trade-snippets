{"version":3,"file":"module.js","mappings":"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","sources":["webpack:///webpack/runtime/load script","webpack:///./consts.ts","webpack:///./utils.ts","webpack:///external amd \"@emotion/css\"","webpack:///external amd \"@grafana/data\"","webpack:///external amd \"@grafana/ui\"","webpack:///external amd \"moment\"","webpack:///external amd \"react\"","webpack:///external amd \"react-dom\"","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/ensure chunk","webpack:///webpack/runtime/get javascript chunk filename","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///webpack/runtime/publicPath","webpack:///webpack/runtime/jsonp chunk loading","webpack:///./dims.ts","webpack:///./XYZDimsEditor.tsx","webpack:///./module.ts","webpack:///./XYZChart.tsx","webpack:///./models.gen.ts"],"sourcesContent":["var inProgress = {};\n// data-webpack is not used as build has no uniqueName\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t};\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","//Axis constants\nexport const INTERVAL_INDEX_LENGTH = 0.2;\nexport const LABEL_DISTANCE_FROM_GRID = 2;\n\n//Scene constants\nexport const LABEL_INTERVAL = 5;\nexport const SCENE_SCALE = 100;\nexport const DATE_FORMAT = 'YYYY-MM-DD HH:mm:ss';\n\n//Colors\nexport const BLACK = '#000000';\nexport const WHITE = '#ffffff';\nexport const AXIS_COLOR = '#808080';\nexport const COLOR_PICKER_OPTIONS: any = {\n  ['super-light-red']: '#FFA6B0',\n  ['light-red']: '#FF7383',\n  ['red']: '#F2495C',\n  ['semi-dark-red']: '#E02F44',\n  ['dark-red']: '#C4162A',\n  ['super-light-orange']: '#FFCB7D',\n  ['light-orange']: '#FFB357',\n  ['orange']: '#FF9830',\n  ['semi-dark-orange']: '#FF780A',\n  ['dark-orange']: '#FA6400',\n  ['super-light-yellow']: '#FFF899',\n  ['light-yellow']: '#FFEE52',\n  ['yellow']: '#FADE2A',\n  ['semi-dark-yellow']: '#F2CC0C',\n  ['dark-yellow']: '#E0B400',\n  ['super-light-green']: '#C8F2C2',\n  ['light-green']: '#96D98D',\n  ['green']: '#73BF69',\n  ['semi-dark-green']: '#56A64B',\n  ['dark-green']: '#37872D',\n  ['super-light-blue']: '#C0D8FF',\n  ['light-blue']: '#8AB8FF',\n  ['blue']: '#5794F2',\n  ['semi-dark-blue']: '#3274D9',\n  ['dark-blue']: '#1F60C4',\n  ['super-light-purple']: '#DEB6F2',\n  ['light-purple']: '#CA95E5',\n  ['purple']: '#B877D9',\n  ['semi-dark-purple']: '#A352CC',\n  ['dark-purple']: '#8F3BB8',\n};\n","import { DataFrame, Field, FieldType, ArrayVector, getFieldDisplayName } from '@grafana/data';\nimport { IntervalLabels, PointData, RGBColor } from 'types';\n//eslint-disable-next-line no-restricted-imports\nimport moment from 'moment';\nimport { COLOR_PICKER_OPTIONS, DATE_FORMAT, LABEL_INTERVAL, SCENE_SCALE } from 'consts';\nimport { XYZSeriesConfig, XYZDimensionConfig } from 'models.gen';\n\nexport function preparePlotByDims(series: DataFrame[], dimensions: XYZDimensionConfig): DataFrame[] {\n  if (!series.length) {\n    return [];\n  }\n\n  const dims = {\n    frame: dimensions?.frame ?? 0,\n    x: dimensions?.x ?? null,\n  };\n\n  let copy: Field;\n  const fields: Field[] = [];\n\n  let xField: Field | null = null;\n\n  for (const field of series[dims.frame].fields) {\n    const name = getFieldDisplayName(field, series[dims.frame], series);\n\n    if (name === dims.x) {\n      xField = field;\n      continue;\n    }\n\n    if (dims.x === null && [FieldType.time, FieldType.number].includes(field.type)) {\n      xField = field;\n      dims.x = name;\n      continue;\n    }\n\n    switch (field.type) {\n      case FieldType.time:\n        fields.push(field);\n        break;\n\n      case FieldType.number:\n        copy = {\n          ...field,\n          values: new ArrayVector(\n            field.values.toArray().map((v) => {\n              if (!(Number.isFinite(v) || v == null)) {\n                return null;\n              }\n\n              return v;\n            })\n          ),\n        };\n\n        fields.push(copy);\n        break;\n    }\n  }\n\n  if (!xField) {\n    return [];\n  }\n\n  const frame: DataFrame = {\n    ...series[dims.frame],\n    fields: [xField, ...fields],\n  };\n\n  return [frame];\n}\n\nexport function preparePlotByExplicitSeries(series: DataFrame[], explicitSeries: XYZSeriesConfig): DataFrame[] {\n  if (!series.length || !explicitSeries || (!explicitSeries.x && !explicitSeries.y && !explicitSeries.z)) {\n    return [];\n  }\n\n  let copy: Field;\n\n  let xField: Field | null = null;\n  let yField: Field | null = null;\n  let zField: Field | null = null;\n\n  for (const frame of series) {\n    for (const field of frame.fields) {\n      const name = getFieldDisplayName(field, series[0], series);\n\n      let f: Field | null = null;\n\n      switch (field.type) {\n        case FieldType.time:\n          f = field;\n          break;\n\n        case FieldType.number:\n          copy = {\n            ...field,\n            values: new ArrayVector(\n              field.values.toArray().map((v) => {\n                if (!(Number.isFinite(v) || v == null)) {\n                  return null;\n                }\n\n                return v;\n              })\n            ),\n          };\n\n          f = copy;\n          break;\n      }\n\n      if (!f) {\n        continue;\n      }\n\n      if (name === explicitSeries.x) {\n        xField = f;\n      }\n\n      if (name === explicitSeries.y) {\n        yField = f;\n      }\n\n      if (name === explicitSeries.z) {\n        zField = f;\n      }\n    }\n  }\n\n  if (!xField || !yField || !zField) {\n    return [];\n  }\n\n  const frame: DataFrame = {\n    ...series[0],\n    fields: [xField, yField, zField],\n  };\n\n  return [frame];\n}\n\ntype ScaleFactors = {\n  [n: number]: {\n    min: number;\n    max: number;\n    factor: number;\n  };\n};\n\n/**\n * Take sparse frame data and format for display with R3F.\n */\nexport function prepData(frames: DataFrame[], dataPointColor: string): PointData {\n  const points = [],\n    colors = [];\n  let scaleFactors: ScaleFactors = {};\n  // TODO: add support for multiple frames\n  // Also, at this moment, we assume that the first 3 fields of a frame are supported types and use those to plot.\n  // Having a frame with more fields, where some fields are not supported (e.g: string), will result in a broken chart.\n\n  // Create scaling factor to map data coordinates to\n  // chart coords, assuming as single data frame (although that's silly)\n  for (let frame of frames) {\n    if (frame.fields.length < 3) {\n      return { points: new Float32Array(), colors: new Float32Array() };\n    }\n\n    for (let i = 0; i < 3; i++) {\n      let vals = frame.fields[i].values.toArray();\n      const max = Math.max(...vals);\n      const min = Math.min(...vals);\n\n      scaleFactors[i] = {\n        min: min,\n        max: max,\n        factor: (max - min) / SCENE_SCALE === 0 ? 1 : (max - min) / SCENE_SCALE,\n      };\n    }\n  }\n\n  for (let frame of frames) {\n    // TODO: Currently this is simply determing point location\n    // by taking the first (sensible, i.e datetime or numeric) field as X, the second field as Y,\n    // and the third avaiable field as Z\n    for (let i = 0; i < frame.length; i++) {\n      // Use the first three fields\n      // At this point we should only have\n      // DateTime fields and number fields\n      for (let j = 0; j < 3; j++) {\n        switch (frame.fields[j].type) {\n          case FieldType.time:\n          case FieldType.number:\n            points.push(\n              frame.fields[j].values.get(i) / scaleFactors[j].factor - scaleFactors[j].min / scaleFactors[j].factor\n            );\n            break;\n        }\n      }\n\n      const normalizedColor: RGBColor = hexToRgb(dataPointColor);\n\n      colors.push(normalizedColor.r);\n      colors.push(normalizedColor.g);\n      colors.push(normalizedColor.b);\n    }\n  }\n\n  return { points: new Float32Array(points), colors: new Float32Array(colors) };\n}\n\nexport function getIntervalLabels(frames: DataFrame[]): IntervalLabels {\n  const xLabels: string[] = [];\n  const yLabels: string[] = [];\n  const zLabels: string[] = [];\n  const intervalFactor = Math.floor(SCENE_SCALE / LABEL_INTERVAL);\n\n  if (frames.length === 0) {\n    return { xLabels, yLabels, zLabels };\n  }\n\n  //build labels based on first frame\n  const frame = frames[0];\n\n  if (frame.fields.length < 3) {\n    return { xLabels, yLabels, zLabels };\n  }\n\n  const xVals = frame.fields[0].values.toArray();\n  const yVals = frame.fields[1].values.toArray();\n  const zVals = frame.fields[2].values.toArray();\n\n  const xMin = Math.min(...xVals);\n  const xMax = Math.max(...xVals);\n  const xFactor = (xMax - xMin) / intervalFactor;\n\n  const yMin = Math.min(...yVals);\n  const yMax = Math.max(...yVals);\n  const yFactor = (yMax - yMin) / intervalFactor;\n\n  const zMin = Math.min(...zVals);\n  const zMax = Math.max(...zVals);\n  const zFactor = (zMax - zMin) / intervalFactor;\n\n  for (let i = 0; i < intervalFactor; i++) {\n    if (frame.fields[0].type === FieldType.time) {\n      xLabels.push(moment.unix((xMin + i * xFactor) / 1000).format(DATE_FORMAT));\n    } else {\n      xLabels.push((xMin + i * xFactor).toFixed(2));\n    }\n\n    yLabels.push((yMin + i * yFactor).toFixed(2));\n    zLabels.push((zMin + i * zFactor).toFixed(2));\n  }\n\n  if (frame.fields[0].type === FieldType.time) {\n    xLabels.push(moment.unix(xMax / 1000).format(DATE_FORMAT));\n  } else {\n    xLabels.push(xMax.toFixed(2));\n  }\n\n  yLabels.push(yMax.toFixed(2));\n  zLabels.push(zMax.toFixed(2));\n\n  return { xLabels, yLabels, zLabels };\n}\n\nexport function hexToRgb(hexColor: string): RGBColor {\n  const color = convertTextColorToHex(hexColor);\n\n  let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(color);\n\n  if (result === null) {\n    return { r: 1, g: 1, b: 1 };\n  }\n\n  let r = parseInt(result[1], 16);\n  let g = parseInt(result[2], 16);\n  let b = parseInt(result[3], 16);\n\n  return { r: r / 255, g: g / 255, b: b / 255 };\n}\n\nexport function convertTextColorToHex(color: string): string {\n  if (color[0] === '#') {\n    return color;\n  }\n\n  return COLOR_PICKER_OPTIONS[color];\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__644__;","module.exports = __WEBPACK_EXTERNAL_MODULE__305__;","module.exports = __WEBPACK_EXTERNAL_MODULE__388__;","module.exports = __WEBPACK_EXTERNAL_MODULE__283__;","module.exports = __WEBPACK_EXTERNAL_MODULE__650__;","module.exports = __WEBPACK_EXTERNAL_MODULE__729__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".js\";\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"public/plugins/grafana-xyzchart-panel/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t261: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk\"] = self[\"webpackChunk\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","import { DataFrame, Field, FieldType } from '@grafana/data';\n\nimport { XYZDimensionConfig } from './models.gen';\n\nexport enum DimensionError {\n  NoData,\n  BadFrameSelection,\n  XNotFound,\n}\n\nexport interface XYZDimensions {\n  frame?: DataFrame;\n  error?: DimensionError;\n}\n\nexport function isGraphable(field: Field) {\n  return field.type === FieldType.number || field.type === FieldType.time;\n}\n\nexport function getXYZDimensions(cfg?: XYZDimensionConfig, data?: DataFrame[]): XYZDimensions {\n  if (!data || !data.length) {\n    const dims: XYZDimensions = {\n      error: DimensionError.NoData,\n    };\n\n    return dims;\n  }\n\n  if (!cfg) {\n    cfg = {\n      frame: 0,\n    };\n  }\n\n  let frame = data[cfg.frame ?? 0];\n  if (!frame) {\n    const dims: XYZDimensions = {\n      error: DimensionError.BadFrameSelection,\n    };\n\n    return dims;\n  }\n\n  let xIndex = -1;\n  for (let i = 0; i < frame.fields.length; i++) {\n    const f = frame.fields[i];\n    if (isGraphable(f)) {\n      xIndex = i;\n      break;\n    }\n  }\n\n  const x = frame.fields[xIndex];\n  const fields: Field[] = [x];\n  for (const f of frame.fields) {\n    if (f === x || !isGraphable(f)) {\n      continue;\n    }\n    fields.push(f);\n  }\n\n  return {\n    frame: {\n      ...frame,\n      fields,\n    },\n  };\n}\n","import React, { useEffect, useMemo } from 'react';\n\nimport { SelectableValue, getFrameDisplayName, StandardEditorProps, getFieldDisplayName } from '@grafana/data';\nimport { Label, Select } from '@grafana/ui';\n\nimport { getXYZDimensions } from './dims';\nimport { XYZDimensionConfig, XYZChartOptions } from './models.gen';\n\ninterface XYZInfo {\n  validFields: Array<SelectableValue<string>>;\n  xField: SelectableValue<string>;\n}\n\nexport const XYZDimsEditor = ({\n  value,\n  onChange,\n  context,\n}: StandardEditorProps<XYZDimensionConfig, null, XYZChartOptions>) => {\n  const frameNames = useMemo(() => {\n    if (context?.data?.length) {\n      return context.data.map((f, idx) => ({\n        value: idx,\n        label: getFrameDisplayName(f, idx),\n      }));\n    }\n    return [{ value: 0, label: 'First result' }];\n  }, [context.data]);\n\n  // Resets value.x to undefined whenever\n  // the frame index or data change.\n  //\n  // onChange is only called on select interaction\n  // so we need to call it manually here when data changes\n  useEffect(() => {\n    if (value?.x !== undefined) {\n      onChange({\n        ...value,\n        x: undefined\n      })\n    }\n  }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  , [context.data, value?.frame]);\n\n  const dims = useMemo(() => getXYZDimensions(value, context.data), [context.data, value]);\n\n  const info = useMemo(() => {\n    const notFoundField = {\n      label: `Not found`,\n      value: undefined\n    };\n\n    const errorInfo: XYZInfo = {\n      validFields: [notFoundField],\n      xField: notFoundField\n    }\n\n    if (context.data.length === 0 || !dims.frame) {\n      return errorInfo;\n    }\n\n    let fieldsInfo: XYZInfo = {\n      validFields: [],\n      xField: {}\n    };\n    const frame = context.data ? context.data[value?.frame ?? 0] : undefined;\n\n    if (frame?.fields) {\n      const firstNumericValField = frame.fields.find((f) => f.type === 'number');\n      if (firstNumericValField) {\n        const firstNumericValFieldName = getFieldDisplayName(firstNumericValField, frame, context.data);\n\n        fieldsInfo.xField = {\n          label: `${firstNumericValFieldName} (First)`,\n          value: firstNumericValFieldName,\n        };\n      }\n    }\n\n    for (let field of dims.frame.fields) {\n      const name = getFieldDisplayName(field, frame, context.data);\n      const sel = {\n        label: name,\n        value: name,\n      };\n      fieldsInfo.validFields.push(sel);\n      if (value?.x && name === value.x) {\n        fieldsInfo.xField = sel;\n      }\n    }\n\n    return fieldsInfo;\n  }, [context.data, dims.frame, value]);\n\n  return (\n    <div>\n      <Select\n        options={frameNames}\n        value={frameNames.find((v) => v.value === value?.frame) ?? frameNames[0]}\n        onChange={(v) => {\n          onChange({\n            ...value,\n            frame: v.value!,\n          });\n        }}\n      />\n      <br />\n      <Label>X Field</Label>\n      <Select\n        options={info.validFields}\n        value={info.xField}\n        onChange={(v) => {\n          onChange({\n            ...value,\n            x: v.value,\n          });\n        }}\n      />\n      <br />\n      <br />\n    </div>\n  );\n};\n","import { PanelPlugin } from '@grafana/data';\nimport { defualtXyzChartConfig, XYZChartOptions } from './models.gen';\nimport { XYZChart } from './XYZChart';\nimport { XYZDimsEditor } from 'XYZDimsEditor';\n\nexport const plugin = new PanelPlugin<XYZChartOptions>(XYZChart).setPanelOptions((builder) => {\n  builder\n    .addRadio({\n      path: 'seriesMapping',\n      name: 'Series mapping',\n      defaultValue: defualtXyzChartConfig.seriesMapping,\n      settings: {\n        options: [\n          { value: 'auto', label: 'Auto' },\n          { value: 'manual', label: 'Manual' },\n        ],\n      },\n    })\n    .addCustomEditor({\n      id: 'xyPlotConfig',\n      path: 'dims',\n      name: 'Data',\n      editor: XYZDimsEditor,\n      showIf: (cfg) => cfg.seriesMapping === 'auto',\n    })\n    .addFieldNamePicker({\n      path: 'series.x',\n      name: 'X Field',\n      showIf: (cfg) => cfg.seriesMapping === 'manual',\n    })\n    .addFieldNamePicker({\n      path: 'series.y',\n      name: 'Y Field',\n      showIf: (cfg) => cfg.seriesMapping === 'manual',\n    })\n    .addFieldNamePicker({\n      path: 'series.z',\n      name: 'Z Field',\n      showIf: (cfg) => cfg.seriesMapping === 'manual',\n    })\n    .addColorPicker({\n      path: 'pointColor',\n      name: 'Point color',\n      settings: {},\n      defaultValue: defualtXyzChartConfig.pointColor,\n    })\n    .addNumberInput({\n      path: 'pointSize',\n      name: 'Point size',\n      settings: {},\n      defaultValue: defualtXyzChartConfig.pointSize,\n    });\n});\n","import React, { useMemo, lazy, useState, useEffect, Suspense } from 'react';\nimport { PanelProps } from '@grafana/data';\nimport { useTheme2 } from '@grafana/ui';\nimport { XYZChartOptions as XYZChartOptions } from 'models.gen';\nimport { preparePlotByDims, preparePlotByExplicitSeries } from 'utils';\n\ninterface Props extends PanelProps<XYZChartOptions> {}\n\nexport const XYZChart: React.FC<Props> = (props) => {\n  const theme = useTheme2();\n  const frames = useMemo(() => {\n    if (props.options.seriesMapping === 'manual') {\n      return preparePlotByExplicitSeries(props.data.series, props.options.series!);\n    } else {\n      return preparePlotByDims(props.data.series, props.options.dims!);\n    }\n  }, [props.data.series, props.options.series, props.options.dims, props.options.seriesMapping]);\n\n  const options: XYZChartOptions = props.options;\n  const [isMounted, setIsMounted] = useState(false);\n  options.themeColor = theme.isDark ? '#ffffff' : '#000000';\n  options.hudBgColor = theme.colors.background.secondary;\n\n  useEffect(() => {\n    setIsMounted(true);\n  }, []);\n\n  let error = false;\n  for (const frame of frames) {\n    if (frame.fields.length < 3) {\n      error = true;\n      break;\n    }\n  }\n\n  const Canvas = lazy(() => import('components/PlotCanvas'));\n\n  if (error || frames.length === 0) {\n    return (\n      <div className=\"panel-empty\">\n        <p>Incorrect data</p>\n      </div>\n    );\n  }\n\n\n  return (\n    <>\n      { !isMounted ? <div className=\"panel-empty\"/> : (<Suspense fallback={null}><Canvas frames={frames} options={options} /></Suspense>) }\n    </>\n    );\n};\n","import { HideableFieldConfig, AxisConfig } from '@grafana/schema';\n\nexport interface XYZSeriesConfig extends HideableFieldConfig, AxisConfig {\n  x?: string;\n  y?: string;\n  z?: string;\n}\n\nexport interface XYZDimensionConfig {\n  frame: number;\n  x?: string; // name | first\n}\n\nexport interface XYZChartOptions {\n  pointColor: string;\n  pointSize: number;\n  themeColor?: string;\n  hudBgColor?: string;\n\n  seriesMapping: 'auto' | 'manual' | undefined;\n  dims?: XYZDimensionConfig;\n  series?: XYZSeriesConfig;\n}\n\nexport const defualtXyzChartConfig: XYZChartOptions = {\n  pointColor: 'red',\n  pointSize: 5,\n  seriesMapping: 'auto',\n};\n"],"names":["inProgress","INTERVAL_INDEX_LENGTH","LABEL_DISTANCE_FROM_GRID","LABEL_INTERVAL","SCENE_SCALE","DATE_FORMAT","WHITE","AXIS_COLOR","COLOR_PICKER_OPTIONS","preparePlotByDims","series","dimensions","length","dims","frame","x","copy","fields","xField","field","name","getFieldDisplayName","FieldType","includes","type","push","values","ArrayVector","toArray","map","v","Number","isFinite","preparePlotByExplicitSeries","explicitSeries","y","z","yField","zField","f","prepData","frames","dataPointColor","points","colors","scaleFactors","Float32Array","i","vals","max","Math","min","factor","j","get","normalizedColor","hexToRgb","r","g","b","getIntervalLabels","xLabels","yLabels","zLabels","intervalFactor","floor","xVals","yVals","zVals","xMin","xMax","xFactor","yMin","yMax","yFactor","zMin","zMax","zFactor","moment","format","toFixed","hexColor","color","convertTextColorToHex","result","exec","parseInt","module","exports","__WEBPACK_EXTERNAL_MODULE__644__","__WEBPACK_EXTERNAL_MODULE__305__","__WEBPACK_EXTERNAL_MODULE__388__","__WEBPACK_EXTERNAL_MODULE__283__","__WEBPACK_EXTERNAL_MODULE__650__","__WEBPACK_EXTERNAL_MODULE__729__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","id","loaded","__webpack_modules__","m","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","e","chunkId","Promise","all","keys","reduce","promises","u","obj","prop","prototype","hasOwnProperty","call","l","url","done","script","needAttach","scripts","document","getElementsByTagName","s","getAttribute","createElement","charset","timeout","nc","setAttribute","src","onScriptComplete","prev","event","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","forEach","fn","setTimeout","bind","target","head","appendChild","Symbol","toStringTag","value","nmd","paths","children","p","installedChunks","installedChunkData","promise","resolve","reject","error","Error","errorType","realSrc","message","request","webpackJsonpCallback","parentChunkLoadingFunction","data","chunkIds","moreModules","runtime","some","chunkLoadingGlobal","self","isGraphable","DimensionError","NoData","BadFrameSelection","XNotFound","XYZDimsEditor","onChange","context","frameNames","useMemo","idx","label","getFrameDisplayName","useEffect","cfg","xIndex","getXYZDimensions","info","notFoundField","errorInfo","validFields","fieldsInfo","firstNumericValField","find","firstNumericValFieldName","sel","div","Select","options","br","Label","plugin","PanelPlugin","props","theme","useTheme2","seriesMapping","isMounted","setIsMounted","useState","themeColor","isDark","hudBgColor","background","secondary","Canvas","lazy","className","Suspense","fallback","setPanelOptions","builder","addRadio","path","defaultValue","settings","addCustomEditor","editor","showIf","addFieldNamePicker","addColorPicker","addNumberInput"],"sourceRoot":""}